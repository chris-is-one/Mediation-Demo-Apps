<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        actionBarVisible="false" creationComplete="start()" activate="onResume()" deactivate="onPause()">

    <fx:Declarations>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
        import com.ironsource.adobeair.IronSource;
        import com.ironsource.adobeair.IronSourceBannerSize;

        [Bindable]
        [Embed(source="assets/logo.png")]
        private var flexImage:Class;

        private var userId:String;
        private var appKey:String;

        private function start():void {
            versionNumber.text = "SDK Version " + IronSource.instance.getPluginVersion();
            userId = "demoUserAdobe";

            if (Capabilities.version.substr(0, 3) == "AND") {
                appKey = "1dc3db545";

            }else {
                appKey = "1dc3deecd";
                // Register for apple attribution and request ATT
                IronSource.instance.registerAppForAdNetworkAttribution();
                IronSource.instance.requestTrackingAuthorizationWithCompletionHandler();
                var userStatus:String = IronSource.instance.trackingAuthorizationStatus();
                trace("trackingAuthorizationStatus is "+userStatus.toString());
            }


            //The integrationHelper is used to validate the integration. Remove the integrationHelper before going live!
            IronSource.instance.validateIntegration();


            IronSource.instance.addEventListener("levelPlayRewardedAvailable", levelPlayRewardedAvailable);
            IronSource.instance.addEventListener("levelPlayRewardedAdUnavailable", levelPlayRewardedAdUnavailable);
            IronSource.instance.addEventListener("levelPlayRewardedAdOpened", levelPlayRewardedAdOpened);
            IronSource.instance.addEventListener("levelPlayRewardedOnAdRewarded", levelPlayRewardedOnAdRewarded);
            IronSource.instance.addEventListener("levelPlayRewardedAdShowFailed", levelPlayRewardedAdShowFailed);
            IronSource.instance.addEventListener("levelPlayRewardedVideoAdClicked", levelPlayRewardedVideoAdClicked);
            IronSource.instance.addEventListener("levelPlayRewardedAdClosed", levelPlayRewardedAdClosed);


            IronSource.instance.addEventListener("levelPlayInterstitialAdReady", levelPlayInterstitialAdReady);
            IronSource.instance.addEventListener("levelPlayInterstitialAdLoadFailed", levelPlayInterstitialAdLoadFailed);
            IronSource.instance.addEventListener("levelPlayInterstitialAdOpened", levelPlayInterstitialAdOpened);
            IronSource.instance.addEventListener("levelPlayInterstitialAdShowSucceeded", levelPlayInterstitialAdShowSucceeded);
            IronSource.instance.addEventListener("levelPlayInterstitialAdShowFailed", levelPlayInterstitialAdShowFailed);
            IronSource.instance.addEventListener("levelPlayInterstitialAdClicked", levelPlayInterstitialAdClicked);
            IronSource.instance.addEventListener("levelPlayInterstitialAdClosed", levelPlayInterstitialAdClosed);


            IronSource.instance.addEventListener("levelPlayBannerAdLoaded", levelPlayBannerAdLoaded);
            IronSource.instance.addEventListener("levelPlayBannerAdLoadFailed", levelPlayBannerAdLoadFailed);
            IronSource.instance.addEventListener("levelPlayBannerAdClicked", levelPlayBannerAdClicked);
            IronSource.instance.addEventListener("levelPlayBannerAdLeftApplication", levelPlayBannerAdLeftApplication);
            IronSource.instance.addEventListener("levelPlayBannerAdScreenPresented", levelPlayBannerAdScreenPresented);
            IronSource.instance.addEventListener("levelPlayBannerAdScreenDismissed", levelPlayBannerAdScreenDismissed);

            IronSource.instance.addEventListener("onSegmentReceived", onSegmentReceived);
            IronSource.instance.addEventListener("onImpressionDataDidSucceed", onImpressionDataDidSucceed);


            IronSource.instance.setAdaptersDebug(true);
            IronSource.instance.setConsent(true);

            IronSource.instance.setUserId(userId);
            IronSource.instance.init(appKey);
            //IronSource.instance.init(appKey, [IronSource.REWARDED_VIDEO, IronSource.INTERSTITIAL, IronSource.BANNER]);


        }

        private function showRewardedVideo():void {
            if (btnRewardedVideo.label == "Show Rewarded Video") {
                if (IronSource.instance.isRewardedVideoAvailable())
                    IronSource.instance.showRewardedVideo();
                else
                    trace("Rewarded Video is not available");
            }
        }


        private function loadInterstitial():void {
            IronSource.instance.loadInterstitial();
        }

        private function showInterstitial():void {
            if (IronSource.instance.isInterstitialReady()) {
                IronSource.instance.showInterstitial();
                btnShowInterstitial.enabled = false;
            } else {
                trace("Interstitial is not available");
            }
        }

        private function loadBanner():void {
            IronSource.instance.loadBanner(IronSourceBannerSize.BANNER, IronSource.POSITION_BOTTOM);
        }

        private function onResume():void {
            IronSource.instance.onResume();
        }

        private function onPause():void {
            IronSource.instance.onPause();
        }

        //************************** RewardedVideo Callbacks **************************
        private function levelPlayRewardedAdOpened(event:DataEvent):void {
            trace("levelPlayRewardedAdOpened");
        }

        private function levelPlayRewardedAdClosed(event:DataEvent):void {
            trace("levelPlayRewardedAdClosed");
        }

        private function levelPlayRewardedAvailable(event:DataEvent):void {
            trace("levelPlayRewardedAvailable: " + event.data);
            btnRewardedVideo.label = "Show Rewarded Video";
            btnRewardedVideo.enabled = true;
        }

        private function levelPlayRewardedAdUnavailable(event:DataEvent):void {
            trace("levelPlayRewardedAdUnavailable: " + event.data);
            btnRewardedVideo.label = "Rewarded Video Unavailable";
            btnRewardedVideo.enabled = false;
        }


        private function levelPlayRewardedOnAdRewarded(event:DataEvent):void {
            var placementId:String;
            var placementName:String;
            var rewardName:String;
            var rewardAmount:int;

            if (event.data) {
                var placement:Object = JSON.parse(event.data);
                placementId = placement.placement_id;
                placementName = placement.placement_name;
                rewardName = placement.placement_reward_name;
                rewardAmount = parseInt(placement.placement_reward_amount);
            }

            trace("levelPlayRewardedOnAdRewarded. Placement Id: " + placementId + " ; Placement name: " + placementName + " ; Reward name: " + rewardName + " ; Reward amount: " + rewardAmount);
        }

        private function levelPlayRewardedAdShowFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("levelPlayRewardedAdShowFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function levelPlayRewardedVideoAdClicked(event:DataEvent):void {
            trace("levelPlayRewardedVideoAdClicked");
        }

        //************************** Interstitial Callbacks **************************
        private function levelPlayInterstitialAdReady(event:DataEvent):void {
            trace("levelPlayInterstitialAdReady");
            btnShowInterstitial.enabled = true;
        }

        private function levelPlayInterstitialAdLoadFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("levelPlayInterstitialAdLoadFailed. Error code: " + errorCode + " ; Description: " + errorDescription);

            btnShowInterstitial.enabled = false;
        }

        private function levelPlayInterstitialAdOpened(event:DataEvent):void {
            trace("levelPlayInterstitialAdOpened");
        }

        private function levelPlayInterstitialAdClosed(event:DataEvent):void {
            trace("levelPlayInterstitialAdClosed");
        }

        private function levelPlayInterstitialAdShowSucceeded(event:DataEvent):void {
            trace("levelPlayInterstitialAdShowSucceeded");
        }

        private function levelPlayInterstitialAdShowFailed(event:DataEvent):void {
            var errorCode:String;
            var errorDescription:String;

            if (event.data) {
                var error:Object = JSON.parse(event.data);
                errorDescription = error.error_description;
                errorCode = error.error_code;
            }

            trace("levelPlayInterstitialAdShowFailed. Error code: " + errorCode + " ; Description: " + errorDescription);
        }

        private function levelPlayInterstitialAdClicked(event:DataEvent):void {
            trace("levelPlayInterstitialAdClicked");
        }



        //************************** Banner Callbacks **************************

        private function levelPlayBannerAdLoaded(event:DataEvent):void {
            trace("levelPlayBannerAdLoaded");
        }

        private function levelPlayBannerAdLoadFailed(event:DataEvent):void {
            trace("levelPlayBannerAdLoadFailed: " + event.data);
        }

        private function levelPlayBannerAdClicked(event:DataEvent):void {
            trace("levelPlayBannerAdClicked");
        }

        private function levelPlayBannerAdScreenPresented(event:DataEvent):void {
            trace("levelPlayBannerAdScreenPresented");
        }

        private function levelPlayBannerAdScreenDismissed(event:DataEvent):void {
            trace("levelPlayBannerAdScreenDismissed");
        }

        private function levelPlayBannerAdLeftApplication(event:DataEvent):void {
            trace("levelPlayBannerAdLeftApplication");
        }

        //************************** Segment Callbacks **************************
        private function onSegmentReceived(event:DataEvent):void {
            trace("onSegmentReceived: " + event.data);
        }

        //************************** ARM Callbacks **************************
        private function onImpressionDataDidSucceed(event:DataEvent):void {
            trace("onImpressionDataDidSucceed: " + event.data);

        }
        ]]>
    </fx:Script>

    <fx:Style>
        .buttonStyle {
            fontSize: 27;
        }

        .lableStyle {
            fontSize: 25;
        }
    </fx:Style>

    <s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="center" paddingBottom="10"
              paddingLeft="10" paddingRight="10" paddingTop="10">
        <s:Image source="{flexImage}" width="100%"/>
        <s:Spacer height="50"/>
        <s:Button id="btnRewardedVideo" label="Initializing Rewarded Video" width="70%" height="70"
                  styleName="buttonStyle" click="showRewardedVideo()" enabled="false"/>
        <s:Button id="btnLoadInterstitial" label="Load Interstitial" width="70%" height="70" styleName="buttonStyle"
                  click="loadInterstitial()"/>
        <s:Button id="btnShowInterstitial" label="Show Interstitial" width="70%" height="70" styleName="buttonStyle"
                  click="showInterstitial()" enabled="false"/>
        <s:Button id="btnLoadBanner" label="Load Banner" width="70%" height="70" styleName="buttonStyle"
                  click="loadBanner()"/>
        <s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" paddingBottom="10"
                  paddingLeft="10" paddingRight="10" paddingTop="10">
            <s:Label id="versionNumber" styleName="lableStyle"/>
        </s:VGroup>
    </s:VGroup>
</s:View>
